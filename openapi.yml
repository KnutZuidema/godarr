openapi: "3.0.1"
info:
  title: Godarr
  version: "0.1"
security:
  - apiKey: []
paths:
  /item/{id}:
    get:
      summary: Request information about an item
      description: >
        Request information about an item, which may be any kind of observable
        object, like a movie or TV series.
      operationId: getItem
      responses:
        200:
          description: Item with specified ID was found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
  /item:
    get:
      summary: list items via paging
      description: >
        Lists items via paging. Paging can be controlled via query parameters
      parameters:
        - name: offset
          in: query
          schema:
            description: value to offset the list of returned items by
            type: integer
            default: 0
        - name: count
          in: query
          schema:
            description: maximum amount of items to return
            type: integer
            default: 20
            maximum: 100
      responses:
        200:
          description: successfully returned items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemPaging'
        401:
          $ref: '#/components/responses/Unauthorized'
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                externalId:
                  description: The ID of this item on an external platform, like IMDb or TMDb.
                  type: string
                  required: true
      summary: Add an item
      description: >
        Add an item to the catalog of known items, making further actions
        available, like searching or monitoring the item.
      operationId: addItem
      responses:
        204:
          description: Item was added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/Conflict'
components:
  responses:
    NotFound:
      description: Resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: >
        Request is missing authorization.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Conflict:
      description: >
        Resource already exists.
        The error message will contain a link to the already existing resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LinkError'
  schemas:
    Item:
      description: An observable item like a movie or TV series
      properties:
        kind:
          $ref: '#/components/schemas/ItemKind'
        id:
          type: uuid
        title:
          type: string
        externalId:
          description: The ID of this item on an external platform, like IMDb or TMDb.
          type: string
        status:
          $ref: '#/components/schemas/ItemStatus'
        description:
          type: string
        imagePath:
          type: string
        releaseYear:
          type: integer
        genres:
          type: array
          items:
            type: string
        rating:
          type: number
        data:
          oneOf:
            - $ref: '#/components/schemas/Movie'
            - $ref: '#/components/schemas/TVSeries'
    ItemKind:
      enum:
        - movie
        - tv-series
    ItemStatus:
      enum:
        - added
        - monitored
        - downloaded
    Movie:
      description: A movie item
      properties:
        collectionID:
          type: string
    TVSeries:
      description: A TV series item
      properties:
        seasonCount:
          type: integer
        seasons:
          type: array
          items:
            $ref: '#/components/schemas/TVSeriesSeason'
    TVSeriesSeason:
      description: A season of a TV series
      properties:
        description:
          type: string
        number:
          type: integer
        releaseYear:
          type: integer
        episodeCount:
          type: integer
        episodes:
          type: array
          items:
            $ref: '#/components/schemas/TVSeriesEpisode'
    TVSeriesEpisode:
      description: An episode of a TV series
      properties:
        title:
          type: string
        description:
          type: string
        seasonNumber:
          type: integer
        number:
          type: integer
    ItemPaging:
      description: list of pageable items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
        offset:
          type: integer
        count:
          type: integer
        total:
          type: integer
    Error:
      description: An error message containing more detailed information about the occured error
      properties:
        message:
          type: string
    LinkError:
      description: An error message with a link to a helpful resource
      properties:
        message:
          type: string
        url:
          type: string
  securitySchemes:
    apiKey:
      description: API provided by the server
      type: apiKey
      name: X-API-Key
      in: header
